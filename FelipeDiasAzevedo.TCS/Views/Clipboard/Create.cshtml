@model FelipeDiasAzevedo.TCS.Business.ViewModels.UpsertClipboardViewModel
@{
    ViewData["Title"] = "Add Clipboard";
}

<h3 class="display-4 mb-4">
    Add Clipboard
</h3>

<form asp-action="Create" method="post" class="d-flex flex-column gap-4">

    <div class="input-group has-validation">
        <span class="input-group-text">@Html.DisplayNameFor(x => x.Title)</span>

        <input asp-for="Title"
            class="form-control @(ViewData.ModelState["Title"]?.Errors.Count > 0 ? "is-invalid" : "")" required />

        <div class="invalid-feedback">
            @Html.ValidationMessageFor(x => x.Title)
        </div>
    </div>

    <div class="input-group has-validation">
        <span class="input-group-text">@Html.DisplayNameFor(x => x.Text)</span>

        <textarea asp-for="Text"
            rows="4"
            class="form-control @(ViewData.ModelState["Text"]?.Errors.Count > 0 ? "is-invalid" : "")"
            style="resize: none;"
            required></textarea>

        <div class="invalid-feedback">
            @Html.ValidationMessageFor(x => x.Title)
        </div>
    </div>

    <div class="form-group mt-2">
        <div class="row">
            <div class="col-12 col-lg-auto">
                <button type="submit" class="btn btn-primary bg-gradient px-3 py-2 w-100">
                    Save
                </button>
            </div>
        </div>
    </div>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}